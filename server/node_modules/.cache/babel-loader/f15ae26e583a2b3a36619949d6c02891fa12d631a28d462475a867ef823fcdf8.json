{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-hot-toast\";\nconst initialState = {\n  //   cart: localStorage.getItem(\"cart\")\n  //     ? JSON.parse(localStorage.getItem(\"cart\"))\n  //     : [],\n  //   total: localStorage.getItem(\"total\")\n  //     ? JSON.parse(localStorage.getItem(\"total\"))\n  //     : 0,\n  totalItems: localStorage.getItem(\"totalItems\") ? JSON.parse(localStorage.getItem(\"totalItems\")) : 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    setToatalItems(state, value) {\n      state.token = value.payload;\n    }\n\n    //     addToCart: (state, action) => {\n    //       const course = action.payload\n    //       const index = state.cart.findIndex((item) => item._id === course._id)\n\n    //       if (index >= 0) {\n    //         // If the course is already in the cart, do not modify the quantity\n    //         toast.error(\"Course already in cart\")\n    //         return\n    //       }\n    //       // If the course is not in the cart, add it to the cart\n    //       state.cart.push(course)\n    //       // Update the total quantity and price\n    //       state.totalItems++\n    //       state.total += course.price\n    //       // Update to localstorage\n    //       localStorage.setItem(\"cart\", JSON.stringify(state.cart))\n    //       localStorage.setItem(\"total\", JSON.stringify(state.total))\n    //       localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems))\n    //       // show toast\n    //       toast.success(\"Course added to cart\")\n    //     },\n\n    //     removeFromCart: (state, action) => {\n    //       const courseId = action.payload\n    //       const index = state.cart.findIndex((item) => item._id === courseId)\n\n    //       if (index >= 0) {\n    //         // If the course is found in the cart, remove it\n    //         state.totalItems--\n    //         state.total -= state.cart[index].price\n    //         state.cart.splice(index, 1)\n    //         // Update to localstorage\n    //         localStorage.setItem(\"cart\", JSON.stringify(state.cart))\n    //         localStorage.setItem(\"total\", JSON.stringify(state.total))\n    //         localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems))\n    //         // show toast\n    //         toast.success(\"Course removed from cart\")\n    //       }\n    //     },\n    //     resetCart: (state) => {\n    //       state.cart = []\n    //       state.total = 0\n    //       state.totalItems = 0\n    //       // Update to localstorage\n    //       localStorage.removeItem(\"cart\")\n    //       localStorage.removeItem(\"total\")\n    //       localStorage.removeItem(\"totalItems\")\n  }\n});\n\nexport const {\n  setToatalItems\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","totalItems","localStorage","getItem","JSON","parse","cartSlice","name","reducers","setToatalItems","state","value","token","payload","actions","reducer"],"sources":["C:/Users/RITU/Desktop/CodeBlink/src/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { toast } from \"react-hot-toast\"\r\n\r\nconst initialState = {\r\n//   cart: localStorage.getItem(\"cart\")\r\n//     ? JSON.parse(localStorage.getItem(\"cart\"))\r\n//     : [],\r\n//   total: localStorage.getItem(\"total\")\r\n//     ? JSON.parse(localStorage.getItem(\"total\"))\r\n//     : 0,\r\n  totalItems: localStorage.getItem(\"totalItems\")\r\n    ? JSON.parse(localStorage.getItem(\"totalItems\"))\r\n    : 0,\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    setToatalItems(state,value){\r\n        state.token=value.payload;\r\n    },\r\n\r\n\r\n\r\n\r\n//     addToCart: (state, action) => {\r\n//       const course = action.payload\r\n//       const index = state.cart.findIndex((item) => item._id === course._id)\r\n\r\n//       if (index >= 0) {\r\n//         // If the course is already in the cart, do not modify the quantity\r\n//         toast.error(\"Course already in cart\")\r\n//         return\r\n//       }\r\n//       // If the course is not in the cart, add it to the cart\r\n//       state.cart.push(course)\r\n//       // Update the total quantity and price\r\n//       state.totalItems++\r\n//       state.total += course.price\r\n//       // Update to localstorage\r\n//       localStorage.setItem(\"cart\", JSON.stringify(state.cart))\r\n//       localStorage.setItem(\"total\", JSON.stringify(state.total))\r\n//       localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems))\r\n//       // show toast\r\n//       toast.success(\"Course added to cart\")\r\n//     },\r\n\r\n\r\n//     removeFromCart: (state, action) => {\r\n//       const courseId = action.payload\r\n//       const index = state.cart.findIndex((item) => item._id === courseId)\r\n\r\n//       if (index >= 0) {\r\n//         // If the course is found in the cart, remove it\r\n//         state.totalItems--\r\n//         state.total -= state.cart[index].price\r\n//         state.cart.splice(index, 1)\r\n//         // Update to localstorage\r\n//         localStorage.setItem(\"cart\", JSON.stringify(state.cart))\r\n//         localStorage.setItem(\"total\", JSON.stringify(state.total))\r\n//         localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems))\r\n//         // show toast\r\n//         toast.success(\"Course removed from cart\")\r\n//       }\r\n//     },\r\n//     resetCart: (state) => {\r\n//       state.cart = []\r\n//       state.total = 0\r\n//       state.totalItems = 0\r\n//       // Update to localstorage\r\n//       localStorage.removeItem(\"cart\")\r\n//       localStorage.removeItem(\"total\")\r\n//       localStorage.removeItem(\"totalItems\")\r\n    },\r\n  \r\n})\r\n\r\nexport const { setToatalItems } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,MAAMC,YAAY,GAAG;EACrB;EACA;EACA;EACA;EACA;EACA;EACEC,UAAU,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAC1CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAC9C;AACN,CAAC;AAED,MAAMG,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,cAAcA,CAACC,KAAK,EAACC,KAAK,EAAC;MACvBD,KAAK,CAACE,KAAK,GAACD,KAAK,CAACE,OAAO;IAC7B;;IAKJ;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACI;AAEJ,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEJ;AAAe,CAAC,GAAGH,SAAS,CAACQ,OAAO;AAEnD,eAAeR,SAAS,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}